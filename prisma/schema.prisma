// File: /prisma/schema.prisma
// Last change: Added imageUrl to the User model to match the application logic.

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "auth"]
}

model Organization {
  id        Int      @id @default(autoincrement())
  name      String
  vatNumber String?  @unique @map("vat_number")
  type      OrgType
  status    VerificationStatus @default(PENDING_VERIFICATION)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  users     User[]

  @@map("organizations")
  @@schema("public")
}

model User {
  id                 Int      @id @default(autoincrement())
  email              String   @unique
  passwordHash       String?  @map("password_hash")
  googleId           String?  @unique @map("google_id")
  displayName        String?  @map("display_name")
  imageUrl           String?  @map("image_url") // <-- PRIDANÁ CHÝBAJÚCA VLASTNOSŤ
  role               UserRole @default(individual_user)
  selectedRole       SelectedRoleType? @map("selected_role")
  organization       Organization?     @relation(fields: [organizationId], references: [id])
  organizationId     Int?              @map("organization_id")
  organizationStatus OrgMembershipStatus @default(NOT_APPLICABLE) @map("organization_status")
  manager            User?             @relation("Hierarchy", fields: [managerId], references: [id])
  managerId          Int?              @map("manager_id")
  subordinates       User[]            @relation("Hierarchy")
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @updatedAt @map("updated_at")

  @@map("users")
  @@schema("auth")
}

model GpsData {
  id        Int      @id @default(autoincrement())
  vehicleId String
  latitude  Float
  longitude Float
  speed     Float?
  timestamp DateTime @default(now())
  accuracy  Float?
  heading   Float?
  altitude  Float?

  @@map("gps_data")
  @@schema("public")
}

enum SelectedRoleType {
  client
  forwarder
  carrier

  @@schema("auth")
}

enum UserRole {
  superadmin
  developer
  org_admin
  dispatcher
  driver
  individual_user

  @@schema("auth")
}

enum OrgMembershipStatus {
  NOT_APPLICABLE
  PENDING_APPROVAL
  ACTIVE
  REJECTED
  SUSPENDED

  @@schema("auth")
}

enum OrgType {
  CARRIER
  FORWARDER
  CLIENT

  @@schema("public")
}

enum VerificationStatus {
  PENDING_VERIFICATION
  VERIFIED
  REJECTED

  @@schema("public")
}
