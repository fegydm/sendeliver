// File: /prisma/schema.prisma

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id         Int                @id @default(autoincrement())
  name       String
  vatNumber  String?            @unique @map("vat_number")
  type       OrgType
  status     VerificationStatus @default(PENDING_VERIFICATION)
  createdAt  DateTime           @default(now())
  updatedAt  DateTime           @updatedAt
  users      User[]

  @@map(name: "organizations", schema: "public")
}

model User {
  id                 Int                   @id @default(autoincrement())
  email              String                @unique
  passwordHash       String?
  googleId           String?               @unique
  displayName        String?
  role               UserRole              @default(individual_user)
  organization       Organization?         @relation(fields: [organizationId], references: [id])
  organizationId     Int?                  @map("organization_id")
  organizationStatus OrgMembershipStatus   @default(NOT_APPLICABLE) @map("organization_status")
  manager            User?                 @relation("Hierarchy", fields: [managerId], references: [id])
  managerId          Int?                  @map("manager_id")
  subordinates       User[]                @relation("Hierarchy")
  createdAt          DateTime              @default(now())
  updatedAt          DateTime              @updatedAt

  @@map(name: "users", schema: "auth")
}

enum UserRole {
  superadmin
  developer
  org_admin
  dispatcher
  driver
  individual_user
}

enum OrgMembershipStatus {
  NOT_APPLICABLE
  PENDING_APPROVAL
  ACTIVE
  REJECTED
  SUSPENDED
}

enum OrgType {
  CARRIER
  FORWARDER
  CLIENT
}

enum VerificationStatus {
  PENDING_VERIFICATION
  VERIFIED
  REJECTED
}