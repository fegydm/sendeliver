// File: ./back/prisma/schema.prisma
// Last change: Added explicit output path for Prisma Client generator

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // e.g. postgres://user:password@localhost:5432/dbsd
}

generator client {
  provider = "prisma-client-js"
  // Specify output path so Prisma 7+ compatibility
  output   = "../node_modules/@prisma/client"
}

// Roles enumerated for user access control
enum Role {
  superadmin
  admin
  client
  carrier
  forwarder // added new role
}

// Main user table with roles and permissions
model User {
  id            Int       @id @default(autoincrement())
  name          String
  email         String    @unique
  passwordHash  String
  role          Role      @default(client)
  permissions   String[]  @default([])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  messages      ContactMessage[]    @relation("UserMessages")
  notifications Notification[]      @relation("UserNotifications")
}

// Messages sent via contact form
model ContactMessage {
  id          Int             @id @default(autoincrement())
  name        String
  email       String
  subject     String
  body        String
  status      MessageStatus   @default(PENDING)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  // Relation back to user if registered
  userId      Int?      
  user        User?     @relation("UserMessages", fields: [userId], references: [id])
}

enum MessageStatus {
  PENDING
  REPLIED
  CLOSED
}

// Notifications for real-time events
model Notification {
  id          Int       @id @default(autoincrement())
  type        String
  data        Json
  timestamp   DateTime  @default(now())
  read        Boolean   @default(false)

  // The user to whom this notification belongs
  userId      Int
  user        User      @relation("UserNotifications", fields: [userId], references: [id])
}
